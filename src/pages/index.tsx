import Head from "next/head";
import Link from "next/link";
import type {
  GetServerSideProps,
  NextPage,
  InferGetServerSidePropsType,
} from "next";
import { useTranslation } from "next-i18next";
import { serverSideTranslations } from "next-i18next/serverSideTranslations";

import { buttonVariants } from "@/components/ui/button";

import { getServerAuthSession } from "@/server/auth";

const Landing: NextPage = (
  props: InferGetServerSidePropsType<typeof getServerSideProps>
) => {
  const { t } = useTranslation(["common"]);

  return (
    <div className="relative min-h-screen bg-black bg-gradient-to-tr from-zinc-900/50 to-zinc-700/30">
      <Head>
        <title>{t("appName")}</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex flex-col gap-8 pb-8 md:gap-16 md:pb-16 xl:pb-24">
        <div className="mx-auto mt-8 flex max-w-3xl flex-col items-center justify-center px-8 sm:mt-0 sm:min-h-screen sm:px-0">
          <div className="hidden sm:mb-8 sm:flex sm:justify-center">
            <Link
              href="/auth/sign-in"
              className="relative overflow-hidden rounded-full px-4 py-1.5 text-sm leading-6 text-zinc-400 ring-1 ring-zinc-100/10 duration-150 hover:ring-zinc-100/30"
            >
              {t("landing:devtagline:pre")}{" "}
              <span className="font-semibold text-zinc-200">
                {t("landing:devtagline:post")}
                <span className="ml-2" aria-hidden="true">
                  &rarr;
                </span>
              </span>
            </Link>
          </div>
          <div>
            <h1 className="bg-gradient-to-t from-zinc-100/50 to-white bg-clip-text py-4 text-center text-5xl font-bold tracking-tight text-transparent sm:text-7xl">
              {t("landing:title")}
            </h1>
            <p className="mt-6 leading-5 text-zinc-600 sm:text-center">
              {t("landing:desc")}
            </p>
            <div className="mx-auto mt-8 flex flex-col justify-center gap-4 sm:max-w-lg sm:flex-row ">
              <Link
                href="/auth/sign-in"
                className={buttonVariants({
                  variant: "default",
                  size: "lg",
                })}
              >
                {t("landing:getStarted")}
              </Link>
              <Link
                href="https://github.com/todo-labs/brainwave#about-the-project"
                className={buttonVariants({
                  variant: "outline",
                  size: "lg",
                })}
              >
                <span>{t("landing:howItWorks")}</span>
                <span className="ml-2" aria-hidden="true">&rarr;</span>
              </Link>
            </div>
          </div>
        </div>
      </main>
    </div>
  );
};

export const getServerSideProps: GetServerSideProps = async (context) => {
  const session = await getServerAuthSession(context);
  if (session) {
    return {
      redirect: {
        destination: "/home",
        permanent: false,
      },
    };
  }
  return {
    props: {
      ...(await serverSideTranslations(context.locale || "en", ["common"])),
    },
  };
};

export default Landing;
